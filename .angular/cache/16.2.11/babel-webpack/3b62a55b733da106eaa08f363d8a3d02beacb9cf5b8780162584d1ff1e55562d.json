{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { inject } from \"@angular/core\";\nimport { BehaviorSubject, catchError, throwError } from \"rxjs\";\nimport { User } from \"../Model/User\";\nimport { tap } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\nimport { environment } from \"src/environments/environment.development\";\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.http = inject(HttpClient);\n    this.user = new BehaviorSubject(null);\n    this.router = inject(Router);\n  }\n  signup(email, password) {\n    const data = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    return this.http.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" + environment.firebaseAPIKEY, data).pipe(catchError(this.handleError), tap(res => {\n      this.handleCreateUser(res);\n    }));\n  }\n  login(email, password) {\n    const data = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    return this.http.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCd8z8HD28xFUdC3qKZSo3kOWefHoOIFB0\", data).pipe(catchError(this.handleError), tap(res => {\n      this.handleCreateUser(res);\n    }));\n  }\n  logout() {\n    this.user.next(null);\n    this.router.navigate([\"/login\"]);\n    localStorage.removeItem(\"user\");\n    if (this.tokenExpiretimer) {\n      clearTimeout(this.tokenExpiretimer);\n    }\n    this.tokenExpiretimer = null;\n  }\n  autoLogin() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!user) {\n      return;\n    }\n    const loggedUser = new User(user.email, user.id, user._token, user._expiresIn);\n    if (loggedUser.token) {\n      this.user.next(loggedUser);\n      const userExpiresIn = new Date(user._expiresIn);\n      const timerValue = userExpiresIn.getTime() - new Date().getTime();\n      this.autoLogout(timerValue);\n    }\n  }\n  autoLogout(expireTime) {\n    this.tokenExpiretimer = setTimeout(() => {\n      this.logout();\n    }, expireTime);\n  }\n  handleCreateUser(res) {\n    const expiresInTs = new Date().getTime() + +res.expiresIn * 1000;\n    const expiresIn = new Date(expiresInTs);\n    const user = new User(res.email, res.localId, res.idToken, expiresIn);\n    this.user.next(user);\n    this.autoLogout(res.expiresIn * 1000);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  }\n  handleError(err) {\n    let errorMessage = \"An unknown error has occured\";\n    console.log(err);\n    if (!err.error || !err.error.error) {\n      return throwError(() => errorMessage);\n    }\n    switch (err.error.error.message) {\n      case \"EMAIL_EXISTS\":\n        errorMessage = \"This email already exists.\";\n        break;\n      case \"OPERATION_NOT_ALLOWED\":\n        errorMessage = \"This operation is not allowed.\";\n        break;\n      case \"INVALID_LOGIN_CREDENTIALS\":\n        errorMessage = \"The email ID or Password is not correct.\";\n        break;\n    }\n    return throwError(() => errorMessage);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpClient","inject","BehaviorSubject","catchError","throwError","User","tap","Router","environment","AuthService","constructor","http","user","router","signup","email","password","data","returnSecureToken","post","firebaseAPIKEY","pipe","handleError","res","handleCreateUser","login","logout","next","navigate","localStorage","removeItem","tokenExpiretimer","clearTimeout","autoLogin","JSON","parse","getItem","loggedUser","id","_token","_expiresIn","token","userExpiresIn","Date","timerValue","getTime","autoLogout","expireTime","setTimeout","expiresInTs","expiresIn","localId","idToken","setItem","stringify","err","errorMessage","console","log","error","message","_","_2","factory","ɵfac"],"sources":["C:\\Users\\Aleksandar\\angular_task_management\\src\\app\\Services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { AuthResponse } from \"../Model/AuthResponse\";\r\nimport { BehaviorSubject, Subject, catchError, throwError } from \"rxjs\";\r\nimport { User } from \"../Model/User\";\r\nimport { tap } from \"rxjs/operators\";\r\nimport { Router } from \"@angular/router\";\r\nimport { environment } from \"src/environments/environment.development\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  http: HttpClient = inject(HttpClient);\r\n  user = new BehaviorSubject<User>(null);\r\n  router: Router = inject(Router);\r\n  private tokenExpiretimer: any;\r\n\r\n  signup(email, password) {\r\n    const data = { email: email, password: password, returnSecureToken: true };\r\n    return this.http\r\n      .post<AuthResponse>(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=\" +\r\n          environment.firebaseAPIKEY,\r\n        data\r\n      )\r\n      .pipe(\r\n        catchError(this.handleError),\r\n        tap((res) => {\r\n          this.handleCreateUser(res);\r\n        })\r\n      );\r\n  }\r\n\r\n  login(email, password) {\r\n    const data = { email: email, password: password, returnSecureToken: true };\r\n    return this.http\r\n      .post<AuthResponse>(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCd8z8HD28xFUdC3qKZSo3kOWefHoOIFB0\",\r\n        data\r\n      )\r\n      .pipe(\r\n        catchError(this.handleError),\r\n        tap((res) => {\r\n          this.handleCreateUser(res);\r\n        })\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    this.user.next(null);\r\n    this.router.navigate([\"/login\"]);\r\n    localStorage.removeItem(\"user\");\r\n\r\n    if (this.tokenExpiretimer) {\r\n      clearTimeout(this.tokenExpiretimer);\r\n    }\r\n    this.tokenExpiretimer = null;\r\n  }\r\n\r\n  autoLogin() {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (!user) {\r\n      return;\r\n    }\r\n\r\n    const loggedUser = new User(\r\n      user.email,\r\n      user.id,\r\n      user._token,\r\n      user._expiresIn\r\n    );\r\n\r\n    if (loggedUser.token) {\r\n      this.user.next(loggedUser);\r\n      const userExpiresIn = new Date(user._expiresIn);\r\n      const timerValue = userExpiresIn.getTime() - new Date().getTime();\r\n      this.autoLogout(timerValue);\r\n    }\r\n  }\r\n\r\n  autoLogout(expireTime: number) {\r\n    this.tokenExpiretimer = setTimeout(() => {\r\n      this.logout();\r\n    }, expireTime);\r\n  }\r\n\r\n  private handleCreateUser(res) {\r\n    const expiresInTs = new Date().getTime() + +res.expiresIn * 1000;\r\n    const expiresIn = new Date(expiresInTs);\r\n    const user = new User(res.email, res.localId, res.idToken, expiresIn);\r\n    this.user.next(user);\r\n    this.autoLogout(res.expiresIn * 1000);\r\n\r\n    localStorage.setItem(\"user\", JSON.stringify(user));\r\n  }\r\n  private handleError(err) {\r\n    let errorMessage = \"An unknown error has occured\";\r\n    console.log(err);\r\n    if (!err.error || !err.error.error) {\r\n      return throwError(() => errorMessage);\r\n    }\r\n    switch (err.error.error.message) {\r\n      case \"EMAIL_EXISTS\":\r\n        errorMessage = \"This email already exists.\";\r\n        break;\r\n      case \"OPERATION_NOT_ALLOWED\":\r\n        errorMessage = \"This operation is not allowed.\";\r\n        break;\r\n      case \"INVALID_LOGIN_CREDENTIALS\":\r\n        errorMessage = \"The email ID or Password is not correct.\";\r\n        break;\r\n    }\r\n    return throwError(() => errorMessage);\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}