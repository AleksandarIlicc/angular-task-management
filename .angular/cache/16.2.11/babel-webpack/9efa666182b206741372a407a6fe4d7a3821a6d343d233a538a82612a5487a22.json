{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nconst _c0 = [\"taskForm\"];\nfunction CreateTaskComponent_p_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 28);\n    i0.ɵɵtext(1, \"*Title is a required filed.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class CreateTaskComponent {\n  constructor() {\n    this.isEditMode = false;\n    this.CloseForm = new EventEmitter();\n    this.EmitTaskData = new EventEmitter();\n  }\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.taskForm.form.patchValue(this.selectedTask);\n    }, 0);\n  }\n  OnCloseForm() {\n    this.CloseForm.emit(false);\n  }\n  OnFormSubmitted(form) {\n    console.log(form);\n    // this.EmitTaskData.emit(form.value);\n    // this.OnCloseForm();\n  }\n  static #_ = this.ɵfac = function CreateTaskComponent_Factory(t) {\n    return new (t || CreateTaskComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateTaskComponent,\n    selectors: [[\"app-create-task\"]],\n    viewQuery: function CreateTaskComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.taskForm = _t.first);\n      }\n    },\n    inputs: {\n      isEditMode: \"isEditMode\",\n      selectedTask: \"selectedTask\"\n    },\n    outputs: {\n      CloseForm: \"CloseForm\",\n      EmitTaskData: \"EmitTaskData\"\n    },\n    decls: 56,\n    vars: 3,\n    consts: [[1, \"overlay\"], [1, \"popup\"], [\"href\", \"#\", 1, \"close\", 3, \"click\"], [1, \"content\"], [1, \"container\"], [\"action\", \"#\", 1, \"form\", 3, \"ngSubmit\"], [\"taskForm\", \"ngForm\"], [1, \"input-box\"], [\"type\", \"text\", \"required\", \"\", \"name\", \"title\", \"ngModel\", \"\"], [\"class\", \"error-message\", 4, \"nfIf\"], [\"rows\", \"8\", \"name\", \"desc\", \"required\", \"\", \"ngModel\", \"\"], [1, \"column\"], [\"type\", \"text\", \"name\", \"assignedTo\", \"required\", \"\", \"ngModel\", \"\"], [\"type\", \"date\", \"name\", \"createdAt\", \"required\", \"\", \"ngModel\", \"\"], [1, \"input-box\", \"address\"], [1, \"select-box\"], [\"name\", \"priority\", \"ngModel\", \"\"], [\"hidden\", \"\"], [\"value\", \"low\"], [\"value\", \"medium\"], [\"value\", \"high\"], [\"value\", \"critical\"], [\"name\", \"status\", \"ngModel\", \"\"], [\"value\", \"open\"], [\"value\", \"started\"], [\"value\", \"in-progress\"], [\"value\", \"complete\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"error-message\"]],\n    template: function CreateTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"a\", 2);\n        i0.ɵɵlistener(\"click\", function CreateTaskComponent_Template_a_click_4_listener() {\n          return ctx.OnCloseForm();\n        });\n        i0.ɵɵtext(5, \"\\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"section\", 4)(8, \"form\", 5, 6);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateTaskComponent_Template_form_ngSubmit_8_listener() {\n          i0.ɵɵrestoreView(_r2);\n          const _r0 = i0.ɵɵreference(9);\n          return i0.ɵɵresetView(ctx.OnFormSubmitted(_r0));\n        });\n        i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\");\n        i0.ɵɵtext(12, \"Title*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵtemplate(14, CreateTaskComponent_p_14_Template, 2, 0, \"p\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\");\n        i0.ɵɵtext(17, \"Description*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"textarea\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 11)(20, \"div\", 7)(21, \"label\");\n        i0.ɵɵtext(22, \"Assigned To\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 7)(25, \"label\");\n        i0.ɵɵtext(26, \"Created At\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\", 14)(29, \"div\", 11)(30, \"div\", 15)(31, \"select\", 16)(32, \"option\", 17);\n        i0.ɵɵtext(33, \"Priority\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"option\", 18);\n        i0.ɵɵtext(35, \"Low\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"option\", 19);\n        i0.ɵɵtext(37, \"Medium\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"option\", 20);\n        i0.ɵɵtext(39, \"High\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"option\", 21);\n        i0.ɵɵtext(41, \"Critical\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(42, \"div\", 15)(43, \"select\", 22)(44, \"option\", 17);\n        i0.ɵɵtext(45, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"option\", 23);\n        i0.ɵɵtext(47, \"Open\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"option\", 24);\n        i0.ɵɵtext(49, \"Started\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"option\", 25);\n        i0.ɵɵtext(51, \"In Progress\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"option\", 26);\n        i0.ɵɵtext(53, \"Complete\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(54, \"button\", 27);\n        i0.ɵɵtext(55);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(9);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Update Task\" : \"Create a new Task\");\n        i0.ɵɵadvance(51);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update Task\" : \"Create Task\", \" \");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CreateTaskComponent","constructor","isEditMode","CloseForm","EmitTaskData","ngAfterViewInit","setTimeout","taskForm","form","patchValue","selectedTask","OnCloseForm","emit","OnFormSubmitted","console","log","_","_2","selectors","viewQuery","CreateTaskComponent_Query","rf","ctx","ɵɵlistener","CreateTaskComponent_Template_a_click_4_listener","CreateTaskComponent_Template_form_ngSubmit_8_listener","ɵɵrestoreView","_r2","_r0","ɵɵreference","ɵɵresetView","ɵɵelement","ɵɵtemplate","CreateTaskComponent_p_14_Template","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","invalid","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Aleksandar\\angular_task_management\\src\\app\\dashboard\\create-task\\create-task.component.ts","C:\\Users\\Aleksandar\\angular_task_management\\src\\app\\dashboard\\create-task\\create-task.component.html"],"sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  Output,\r\n  Input,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Task } from \"src/app/Model/Task\";\r\n\r\n@Component({\r\n  selector: \"app-create-task\",\r\n  templateUrl: \"./create-task.component.html\",\r\n  styleUrls: [\"./create-task.component.css\"],\r\n})\r\nexport class CreateTaskComponent {\r\n  @Input() isEditMode: boolean = false;\r\n  @Input() selectedTask: Task;\r\n  @ViewChild(\"taskForm\") taskForm: NgForm;\r\n  @Output()\r\n  CloseForm: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output()\r\n  EmitTaskData: EventEmitter<Task> = new EventEmitter<Task>();\r\n\r\n  ngAfterViewInit() {\r\n    setTimeout(() => {\r\n      this.taskForm.form.patchValue(this.selectedTask);\r\n    }, 0);\r\n  }\r\n\r\n  OnCloseForm() {\r\n    this.CloseForm.emit(false);\r\n  }\r\n\r\n  OnFormSubmitted(form: NgForm) {\r\n    console.log(form);\r\n    // this.EmitTaskData.emit(form.value);\r\n    // this.OnCloseForm();\r\n  }\r\n}\r\n","<div class=\"overlay\">\r\n  <div class=\"popup\">\r\n    <h2>{{ isEditMode ? \"Update Task\" : \"Create a new Task\" }}</h2>\r\n    <a class=\"close\" href=\"#\" (click)=\"OnCloseForm()\">&times;</a>\r\n    <div class=\"content\">\r\n      <section class=\"container\">\r\n        <form\r\n          action=\"#\"\r\n          class=\"form\"\r\n          #taskForm=\"ngForm\"\r\n          (ngSubmit)=\"OnFormSubmitted(taskForm)\"\r\n        >\r\n          <div class=\"input-box\">\r\n            <label>Title*</label>\r\n            <input type=\"text\" required name=\"title\" ngModel />\r\n            <p class=\"error-message\" *nfIf=\"\">*Title is a required filed.</p>\r\n          </div>\r\n          <div class=\"input-box\">\r\n            <label>Description*</label>\r\n            <textarea rows=\"8\" name=\"desc\" required ngModel></textarea>\r\n          </div>\r\n          <div class=\"column\">\r\n            <div class=\"input-box\">\r\n              <label>Assigned To</label>\r\n              <input type=\"text\" name=\"assignedTo\" required ngModel />\r\n            </div>\r\n            <div class=\"input-box\">\r\n              <label>Created At</label>\r\n              <input type=\"date\" name=\"createdAt\" required ngModel />\r\n            </div>\r\n          </div>\r\n          <div class=\"input-box address\">\r\n            <div class=\"column\">\r\n              <div class=\"select-box\">\r\n                <select name=\"priority\" ngModel>\r\n                  <option hidden>Priority</option>\r\n                  <option value=\"low\">Low</option>\r\n                  <option value=\"medium\">Medium</option>\r\n                  <option value=\"high\">High</option>\r\n                  <option value=\"critical\">Critical</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"select-box\">\r\n                <select name=\"status\" ngModel>\r\n                  <option hidden>Status</option>\r\n                  <option value=\"open\">Open</option>\r\n                  <option value=\"started\">Started</option>\r\n                  <option value=\"in-progress\">In Progress</option>\r\n                  <option value=\"complete\">Complete</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" [disabled]=\"taskForm.invalid\">\r\n            {{ isEditMode ? \"Update Task\" : \"Create Task\" }}\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}