{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../Services/auth.service\";\nimport { map, take } from \"rxjs/operators\";\nexport const canActivate = (router, state) => {\n  const authService = inject(AuthService);\n  const route = inject(Router);\n  return authService.user.pipe(take(1), map(user => {\n    const loggedIn = user ? true : false;\n    if (loggedIn) {\n      return true;\n    } else {\n      return route.createUrlTree([\"/login\"]);\n    }\n  }));\n};\nexport const canDeactivate = component => {};","map":{"version":3,"names":["inject","Router","AuthService","map","take","canActivate","router","state","authService","route","user","pipe","loggedIn","createUrlTree","canDeactivate","component"],"sources":["C:\\Users\\Aleksandar\\angular_task_management\\src\\app\\RouteGuards\\authGuard.ts"],"sourcesContent":["import { inject } from \"@angular/core\";\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from \"@angular/router\";\r\nimport { AuthService } from \"../Services/auth.service\";\r\nimport { map, take } from \"rxjs/operators\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport const canActivate = (\r\n  router: ActivatedRouteSnapshot,\r\n  state: RouterStateSnapshot\r\n):\r\n  | boolean\r\n  | UrlTree\r\n  | Promise<boolean | UrlTree>\r\n  | Observable<boolean | UrlTree> => {\r\n  const authService = inject(AuthService);\r\n  const route = inject(Router);\r\n\r\n  return authService.user.pipe(\r\n    take(1),\r\n    map((user) => {\r\n      const loggedIn = user ? true : false;\r\n\r\n      if (loggedIn) {\r\n        return true;\r\n      } else {\r\n        return route.createUrlTree([\"/login\"]);\r\n      }\r\n    })\r\n  );\r\n};\r\n\r\nexport const canDeactivate = (component) => {};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAEEC,MAAM,QAGD,iBAAiB;AACxB,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,GAAG,EAAEC,IAAI,QAAQ,gBAAgB;AAG1C,OAAO,MAAMC,WAAW,GAAGA,CACzBC,MAA8B,EAC9BC,KAA0B,KAKQ;EAClC,MAAMC,WAAW,GAAGR,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMO,KAAK,GAAGT,MAAM,CAACC,MAAM,CAAC;EAE5B,OAAOO,WAAW,CAACE,IAAI,CAACC,IAAI,CAC1BP,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAAEO,IAAI,IAAI;IACX,MAAME,QAAQ,GAAGF,IAAI,GAAG,IAAI,GAAG,KAAK;IAEpC,IAAIE,QAAQ,EAAE;MACZ,OAAO,IAAI;KACZ,MAAM;MACL,OAAOH,KAAK,CAACI,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC;;EAE1C,CAAC,CAAC,CACH;AACH,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIC,SAAS,IAAI,CAAE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}