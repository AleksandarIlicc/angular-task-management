{"ast":null,"code":"import { inject } from \"@angular/core\";\nimport { HttpClient, HttpHeaders, HttpEventType } from \"@angular/common/http\";\nimport { map, catchError, tap } from \"rxjs/operators\";\nimport { Subject, throwError } from \"rxjs\";\nimport { LoggingService } from \"./Logging.Service\";\nimport { AuthService } from \"./auth.service\";\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this.http = inject(HttpClient);\n    this.loggingService = inject(LoggingService);\n    this.errorSubject = new Subject();\n    this.authService = inject(AuthService);\n  }\n  CreateTask(task) {\n    const headers = new HttpHeaders({\n      \"my-header\": \"hello-world\"\n    });\n    this.http.post(\"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\", task, {\n      headers: headers\n    }).pipe(catchError(err => {\n      //Write the logic to log errors\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        datetime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  DeleteTask(id) {\n    this.http.delete(\"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks/\" + id + \".json\").pipe(catchError(err => {\n      //Write the logic to log errors\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        datetime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  DeleteAllTasks() {\n    this.http.delete(\"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\", {\n      observe: \"events\",\n      responseType: \"json\"\n    }).pipe(tap(event => {\n      console.log(event);\n      if (event.type === HttpEventType.Sent) {}\n    }), catchError(err => {\n      //Write the logic to log errors\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        datetime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  GetAlltasks() {\n    return this.http.get(\"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\").pipe(map(response => {\n      //TRANSFORM DATA\n      let tasks = [];\n      console.log(response);\n      for (let key in response) {\n        if (response.hasOwnProperty(key)) {\n          tasks.push({\n            ...response[key],\n            id: key\n          });\n        }\n      }\n      return tasks;\n    }), catchError(err => {\n      //Write the logic to log errors\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        datetime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    }));\n  }\n  UpdateTask(id, data) {\n    this.http.put(\"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks/\" + id + \".json\", data).pipe(catchError(err => {\n      //Write the logic to log errors\n      const errorObj = {\n        statusCode: err.status,\n        errorMessage: err.message,\n        datetime: new Date()\n      };\n      this.loggingService.logError(errorObj);\n      return throwError(() => err);\n    })).subscribe({\n      error: err => {\n        this.errorSubject.next(err);\n      }\n    });\n  }\n  getTaskDetails(id) {\n    return this.http.get(\"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks/\" + id + \".json\").pipe(map(response => {\n      console.log(response);\n      let task = {};\n      task = {\n        ...response,\n        id: id\n      };\n      return task;\n    }));\n  }\n  static #_ = this.ɵfac = function TaskService_Factory(t) {\n    return new (t || TaskService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TaskService,\n    factory: TaskService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"names":["inject","HttpClient","HttpHeaders","HttpEventType","map","catchError","tap","Subject","throwError","LoggingService","AuthService","TaskService","constructor","http","loggingService","errorSubject","authService","CreateTask","task","headers","post","pipe","err","errorObj","statusCode","status","errorMessage","message","datetime","Date","logError","subscribe","error","next","DeleteTask","id","delete","DeleteAllTasks","observe","responseType","event","console","log","type","Sent","GetAlltasks","get","response","tasks","key","hasOwnProperty","push","UpdateTask","data","put","getTaskDetails","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Aleksandar\\angular-16-complete-course\\16-angular-module\\start\\src\\app\\Services\\task.service.ts"],"sourcesContent":["import { Injectable, inject } from \"@angular/core\";\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpErrorResponse,\r\n  HttpParams,\r\n  HttpEventType,\r\n} from \"@angular/common/http\";\r\nimport { Task } from \"../Model/Task\";\r\nimport { map, catchError, tap, take, exhaustMap } from \"rxjs/operators\";\r\nimport { Subject, throwError } from \"rxjs\";\r\nimport { LoggingService } from \"./Logging.Service\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class TaskService {\r\n  http: HttpClient = inject(HttpClient);\r\n  loggingService: LoggingService = inject(LoggingService);\r\n  errorSubject = new Subject<HttpErrorResponse>();\r\n  authService: AuthService = inject(AuthService);\r\n\r\n  CreateTask(task: Task) {\r\n    const headers = new HttpHeaders({ \"my-header\": \"hello-world\" });\r\n    this.http\r\n      .post<{ name: string }>(\r\n        \"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\r\n        task,\r\n        { headers: headers }\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          //Write the logic to log errors\r\n          const errorObj = {\r\n            statusCode: err.status,\r\n            errorMessage: err.message,\r\n            datetime: new Date(),\r\n          };\r\n          this.loggingService.logError(errorObj);\r\n          return throwError(() => err);\r\n        })\r\n      )\r\n      .subscribe({\r\n        error: (err) => {\r\n          this.errorSubject.next(err);\r\n        },\r\n      });\r\n  }\r\n\r\n  DeleteTask(id: string | undefined) {\r\n    this.http\r\n      .delete(\r\n        \"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks/\" +\r\n          id +\r\n          \".json\"\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          //Write the logic to log errors\r\n          const errorObj = {\r\n            statusCode: err.status,\r\n            errorMessage: err.message,\r\n            datetime: new Date(),\r\n          };\r\n          this.loggingService.logError(errorObj);\r\n          return throwError(() => err);\r\n        })\r\n      )\r\n      .subscribe({\r\n        error: (err) => {\r\n          this.errorSubject.next(err);\r\n        },\r\n      });\r\n  }\r\n\r\n  DeleteAllTasks() {\r\n    this.http\r\n      .delete(\r\n        \"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\",\r\n        { observe: \"events\", responseType: \"json\" }\r\n      )\r\n      .pipe(\r\n        tap((event) => {\r\n          console.log(event);\r\n          if (event.type === HttpEventType.Sent) {\r\n          }\r\n        }),\r\n        catchError((err) => {\r\n          //Write the logic to log errors\r\n          const errorObj = {\r\n            statusCode: err.status,\r\n            errorMessage: err.message,\r\n            datetime: new Date(),\r\n          };\r\n          this.loggingService.logError(errorObj);\r\n          return throwError(() => err);\r\n        })\r\n      )\r\n      .subscribe({\r\n        error: (err) => {\r\n          this.errorSubject.next(err);\r\n        },\r\n      });\r\n  }\r\n\r\n  GetAlltasks() {\r\n    return this.http\r\n      .get(\r\n        \"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks.json\"\r\n      )\r\n      .pipe(\r\n        map((response) => {\r\n          //TRANSFORM DATA\r\n          let tasks = [];\r\n          console.log(response);\r\n          for (let key in response) {\r\n            if (response.hasOwnProperty(key)) {\r\n              tasks.push({ ...response[key], id: key });\r\n            }\r\n          }\r\n\r\n          return tasks;\r\n        }),\r\n        catchError((err) => {\r\n          //Write the logic to log errors\r\n          const errorObj = {\r\n            statusCode: err.status,\r\n            errorMessage: err.message,\r\n            datetime: new Date(),\r\n          };\r\n          this.loggingService.logError(errorObj);\r\n          return throwError(() => err);\r\n        })\r\n      );\r\n  }\r\n\r\n  UpdateTask(id: string | undefined, data: Task) {\r\n    this.http\r\n      .put(\r\n        \"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks/\" +\r\n          id +\r\n          \".json\",\r\n        data\r\n      )\r\n      .pipe(\r\n        catchError((err) => {\r\n          //Write the logic to log errors\r\n          const errorObj = {\r\n            statusCode: err.status,\r\n            errorMessage: err.message,\r\n            datetime: new Date(),\r\n          };\r\n          this.loggingService.logError(errorObj);\r\n          return throwError(() => err);\r\n        })\r\n      )\r\n      .subscribe({\r\n        error: (err) => {\r\n          this.errorSubject.next(err);\r\n        },\r\n      });\r\n  }\r\n\r\n  getTaskDetails(id: string | undefined) {\r\n    return this.http\r\n      .get(\r\n        \"https://angulartaskmanagement-default-rtdb.europe-west1.firebasedatabase.app/tasks/\" +\r\n          id +\r\n          \".json\"\r\n      )\r\n      .pipe(\r\n        map((response) => {\r\n          console.log(response);\r\n          let task = {};\r\n          task = { ...response, id: id };\r\n          return task;\r\n        })\r\n      );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}